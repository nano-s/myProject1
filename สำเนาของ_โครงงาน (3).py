import streamlit as st
import cv2
import numpy as np
from PIL import Image
import matplotlib.pyplot as plt

st.set_page_config(page_title="UV Analyzer", layout="centered")
st.title("üßº ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏™‡∏≤‡∏£‡πÄ‡∏£‡∏∑‡∏≠‡∏á‡πÅ‡∏™‡∏á‡∏à‡∏≤‡∏Å‡∏†‡∏≤‡∏û‡∏°‡∏∑‡∏≠")

uploaded_file = st.file_uploader("üì∑ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡∏°‡∏∑‡∏≠‡∏†‡∏≤‡∏¢‡πÉ‡∏ï‡πâ‡πÅ‡∏™‡∏á UVA", type=["jpg", "png", "jpeg"])

if uploaded_file:
    pil_image = Image.open(uploaded_file).convert('RGB')
    image = np.array(pil_image)
    hsv = cv2.cvtColor(image, cv2.COLOR_RGB2HSV)

    # ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ
    lower_fluorescent = np.array([105, 80, 160])
    upper_fluorescent = np.array([130, 255, 255])

    mask = cv2.inRange(hsv, lower_fluorescent, upper_fluorescent)

    st.write(f"hsv type: {type(hsv)}, shape: {hsv.shape}")
    st.write(f"lower: {lower_fluorescent}, upper: {upper_fluorescent}")
    # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà fluoresence
    fluorescent_area = cv2.countNonZero(mask)
    total_area = image.shape[0] * image.shape[1]
    percentage = (fluorescent_area / total_area) * 100
    mask = cv2.inRange(hsv, lower_fluorescent, upper_fluorescent)


    # ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏ï‡∏≤‡∏°‡πÇ‡∏ã‡∏ô‡∏ï‡πà‡∏≤‡∏á ‡πÜ
    height, width = mask.shape
zones = {
    "‡∏ù‡πà‡∏≤‡∏°‡∏∑‡∏≠": mask[int(height*0.35):int(height*0.65), int(width*0.25):int(width*0.75)],
    "‡∏ô‡∏¥‡πâ‡∏ß‡∏°‡∏∑‡∏≠": mask[0:int(height*0.35), int(width*0.2):int(width*0.8)],
    "‡∏´‡∏•‡∏±‡∏á‡∏°‡∏∑‡∏≠": mask[int(height*0.35):int(height*0.65), 0:int(width*0.25)],
    "‡∏Ç‡πâ‡∏≠‡∏°‡∏∑‡∏≠": mask[int(height*0.65):, int(width*0.25):int(width*0.75)],
    "‡∏ô‡∏¥‡πâ‡∏ß‡∏´‡∏±‡∏ß‡πÅ‡∏°‡πà‡∏°‡∏∑‡∏≠": mask[int(height*0.2):int(height*0.5), int(width*0.8):],
    "‡∏´‡∏•‡∏±‡∏á‡∏ô‡∏¥‡πâ‡∏ß‡∏´‡∏±‡∏ß‡πÅ‡∏°‡πà‡∏°‡∏∑‡∏≠": mask[int(height*0.2):int(height*0.5), 0:int(width*0.2)],
    "‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏ô‡∏¥‡πâ‡∏ß": mask[int(height*0.2):int(height*0.35), int(width*0.3):int(width*0.7)]
    }

recommendations = []
zone_results = {}

for zone_name, zone_mask in zones.items():
        zone_area = zone_mask.shape[0] * zone_mask.shape[1]
        zone_fluorescent = cv2.countNonZero(zone_mask)
        zone_percent = (zone_fluorescent / zone_area) * 100
        zone_results[zone_name] = zone_percent
        if zone_percent > 5:
            recommendations.append(f"- ‡∏Ñ‡∏ß‡∏£‡∏•‡πâ‡∏≤‡∏á‡∏ö‡∏£‡∏¥‡πÄ‡∏ß‡∏ì **{zone_name}** ‡πÉ‡∏´‡πâ‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡∏∂‡πâ‡∏ô ({zone_percent:.1f}%)")

    # ‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û‡∏ï‡πâ‡∏ô‡∏â‡∏ö‡∏±‡∏ö‡πÅ‡∏•‡∏∞ mask
st.image(pil_image, caption="‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î", use_column_width=True)

fig, ax = plt.subplots(1, 2, figsize=(10, 5))
ax[0].imshow(image)
ax[0].set_title("‡∏†‡∏≤‡∏û‡∏ï‡πâ‡∏ô‡∏â‡∏ö‡∏±‡∏ö")
ax[0].axis('off')
ax[1].imshow(mask, cmap='gray')
ax[1].set_title("‡∏ö‡∏£‡∏¥‡πÄ‡∏ß‡∏ì‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏™‡∏≤‡∏£‡πÄ‡∏£‡∏∑‡∏≠‡∏á‡πÅ‡∏™‡∏á")
ax[1].axis('off')
st.pyplot(fig)

    # ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå
st.markdown(f"üîç ‡∏û‡∏ö‡∏™‡∏≤‡∏£‡πÄ‡∏£‡∏∑‡∏≠‡∏á‡πÅ‡∏™‡∏á‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì **{percentage:.2f}%** ‡∏Ç‡∏≠‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏†‡∏≤‡∏û")

if recommendations:
        st.markdown("üßº **‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡πâ‡∏≤‡∏á‡∏°‡∏∑‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°:**")
        for rec in recommendations:
            st.markdown(rec)
else:
        st.success("‚úÖ ‡∏°‡∏∑‡∏≠‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏î‡∏µ ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏≤‡∏£‡πÄ‡∏£‡∏∑‡∏≠‡∏á‡πÅ‡∏™‡∏á‡πÉ‡∏ô‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏•‡πâ‡∏≤‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°")

    # ‡∏õ‡∏∏‡πà‡∏°‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
result_text = f"‡∏û‡∏ö‡∏™‡∏≤‡∏£‡πÄ‡∏£‡∏∑‡∏≠‡∏á‡πÅ‡∏™‡∏á‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì {percentage:.2f}%\n"
result_text = f"‡∏û‡∏ö‡∏™‡∏≤‡∏£‡πÄ‡∏£‡∏∑‡∏≠‡∏á‡πÅ‡∏™‡∏á‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì {percentage:.2f}%\n"
if recommendations:
        result_text += "\n‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:\n" + "\n".join(recommendations)
else:
        result_text += "\n‡∏°‡∏∑‡∏≠‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏î‡∏µ ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏≤‡∏£‡πÄ‡∏£‡∏∑‡∏≠‡∏á‡πÅ‡∏™‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°"

st.download_button("üì• ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå", result_text, file_name="uv_result.txt")
